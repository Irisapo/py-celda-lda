# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
fair <- read.csv("WorkOpportunity_clean.csv")
getwd()
# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
fair <- read.csv("WorkOpportunity_clean.csv")
rm(list = ls())
# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
fair <- read.csv("WorkOpportunity_clean.csv")
getwd()
800 - 577.21
107.77 /671.87
a = data.frame(producer =rep("Ana", 11), WeeksOnChat = c(seq(1,7),seq(1,4)), Year = c(rep(2004, 3), rep(2005, 8)))
a
??group_by
library(dplyr)
?unique
unique(a[,2:3])
table(unique(a$WeeksOnChat), unique(a$Year))
?aggregate
aggregate(a, by=list(WeeksOnChat,Year ), length(unique))
aggregate(a, by=list(WeeksOnChat,Year ), length(unique()))
aggregate(a, by=list(WeeksOnChat,Year ), function(i) length(unique(i)))
aggregate(x = a, by=list(WeeksOnChat,Year ), function(i) length(unique(i)))
aggregate(x = a, by=list(a$WeeksOnChat,a$Year ), function(i) length(unique(i)))
aggregate(x = a, by=list(a$WeeksOnChat,a$Year ), sum)
aggregate(WeeksOnChat ~ Year , data = a, sum)
aggregate(WeeksOnChat ~ Year , data = a, function(x) length(unique(x)))
a = data.frame(Title = c(rep("Hello", 7), rep("Meow",4)), producer =rep("Ana", 11), WeeksOnChat = c(seq(1,7),seq(1,4)), Year = c(rep(2004, 3), rep(2005, 8)))
a
aggregate(WeeksOnChat ~ Year + Title , data = a, function(x) length(unique(x)))
install.packages("survey")
knitr::opts_chunk$set(echo = TRUE,fig.width=6,fig.height=6 ,
out.width="0.7\\linewidth", fig.align = "center")
library(RColorBrewer)
library(ggplot2)
library(celda)
library(gtools)
library(pheatmap)
library(reshape2)
library(vcd)
library(corrplot)
library(gtable)
library(scales)
library(celda)
sim_counts = simulateCells.celda_C( G = 100,K = 3)
pheatmap(scale(sim_counts$counts,center = F),cluster_rows = FALSE, cluster_cols = FALSE)
sum(which(sim_counts$counts==0))
sum(which(sim_counts$counts==0)) / 100 / 447
sum(which(sim_counts$counts!=0)) / 100 / 447
length(which(sim_counts$counts!=0)) / 100 / 447
which(sim_counts$counts!= 0)
length(which(sim_counts$counts!= 0))
length(which(sim_counts$counts!= 0)) / 447 / 100
sum(sim_counts$counts!= 0 )
dim(sim_counts$counts)
prod(dim(sim_counts$counts))
library(celda)
data("sample.cells")
library(pheatmap)
pheatmap(scale(sample.cells,center = F),cluster_rows = FALSE, cluster_cols = FALSE)
toy_celda_cg = celda(sample.cells, model="celda_CG",sample.label = rep(1,12),K = 4, L = 4)
toy_celda_cg$res.list[[1]]$z
celda_heatmap(celda.mod = toy_celda_cg$res.list[[1]], counts = sample.cells, z.trim = NULL)
sim_counts = simulateCells.celda_C( G = 100,K = 3)
pheatmap(scale(sim_counts$counts,center = F),cluster_rows = FALSE, cluster_cols = FALSE)
dim(sim_counts$counts)
sum(sim_counts$counts!= 0 ) / prod(dim(sim_counts$counts))
celda_cluster_assignments = celda( sim_counts$counts, model="celda_CG",
sample.label = sim_counts$sample,
K = 3,L = 3,max.iter = 25 )
#str(celda_cluster_assignments)
estimated.z=celda_cluster_assignments$res.list[[1]]$z
truth.z=sim_counts$z
xtabs(~ estimated.z + truth.z)
#xtabs(~celda_cluster_assignments$y + sim_counts$y)
celda_heatmap(celda.mod = celda_cluster_assignments$res.list[[1]],counts = sim_counts$counts)
estimated.z=celda_cluster_assignments$res.list[[1]]$z
truth.z=sim_counts$z
xtabs(~ estimated.z + truth.z)
#xtabs(~celda_cluster_assignments$y + sim_counts$y)
sim_counts$z
sim_counts$K
sim_counts$sample.label
celda_cluster_assignments
celda_cluster_assignments$res.list$y
celda_cluster_assignments$res.list[[1]]
celda_cluster_assignments$res.list[[1]]$y
gene_labels = celda_cluster_assignments$res.list[[1]]$y
gene_labels
grouping(gene_labels)
?Position
?Position
which(gene_labels == 1)
songs = read.csv("/Users/irisapo/Downloads/iris_hello.xlsx")
songs = read.csv("/Users/irisapo/Downloads/iris_hello.xlsx")
songs = read.csv("/Users/irisapo/Downloads/iris_hello.xlsx")
songs = read.csv("/Users/irisapo/Downloads/iris_hello.xlsx", header = T)
songs = read.table("/Users/irisapo/Downloads/iris_hello.xlsx", header = T)
songs = read.table("/Users/irisapo/Downloads/iris_hello.csv", header = T)
songs = read.csv("/Users/irisapo/Downloads/iris_hello.csv", header = T)
songs
View(songs)
?aggregate()
aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = max())
aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = max
)
songs.agre <- aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = max)
songs.agre
songs.agre
songs.agre <- aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = diff)
songs.agre
songs.agre <- aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = max)
songs
songs.agre
?lag
lag(songs.agre$Weeks)
lag(songs.agre$Weeks, 12)
songs.agre$Weeks lag(songs.agre$Weeks, 12)
songs.agre$Weeks - lag(songs.agre$Weeks, 12)
?ddply
??ddply
library(plyr)
?ddply
diff(songs.agre[2:3,])
diff(songs.agre[2:3,]$Weeks)
ddply(songs.agre, .(Producer, Title, Year), summarise, #weeks = )
sd
)
ddply(songs.agre, .(Producer, Title, Year), summarise,
#weeks = diff)
)
ddply(songs.agre, .(Producer, Title, Year), summarise,
#weeks = diff(Weeks) )
)
ddply(songs.agre, .(Producer, Title, Year), summarise,
n_weeks = diff(Weeks) )
ddply(songs.agre, .(Producer, Title, Year), function(x) ifelse(length(Year)==1, Weeks, diff(Weeks)) )
ddply(songs.agre, .(Producer, Title, Year), function(x) ifelse(length(Weeks)==1, Weeks, diff(Weeks)) )
ddply(songs.agre, .(Producer, Title, Year), function(x) ifelse(length(songs.agre$Weeks)==1, Weeks, diff(songs.agre$Weeks)) )
ddply(songs.agre, .(Producer, Title, Year), function(x) ifelse(length(songs.agre$Weeks)==1, songs.agre$Weeks, diff(songs.agre$Weeks)) )
ddply(songs.agre, .(Producer, Title, Year), function(x) ifelse(length(songs.agre$Year)==1, songs.agre$Weeks, diff(songs.agre$Weeks)) )
songs.agre
aggregate(Weeks ~ Producer + Title + Year, data = songs.agre, function(x) ifelse(length(Weeks)==1), Weeks, diff(Weeks))
aggregate(Weeks ~ Producer + Title + Year, data = songs.agre, function(x) ifelse(length(songs.agre$Weeks)==1), songs.agre$Weeks, diff(songs.agre$Weeks))
ddply(songs.agre, .(Producer, Title, Year), summarise, ifelse(length(Year)==1, Weeks, diff(Weeks)) )
ddply(songs.agre, .(Producer, Title), summarise, ifelse(length(Year)==1, Weeks, diff(Weeks)) )
ddply(songs.agre, .(Producer, Title), summarise, ifelse(length(Year)==1 || Year = min(Year), Weeks, diff(Weeks)  ) )
ddply(songs.agre, .(Producer, Title), summarise, ifelse(length(Year)==1 || Year == min(Year), Weeks, diff(Weeks)  ) )
ddply(songs.agre, .(Producer, Title), summarise, ifelse(length(Year)==1, Weeks,ifelse(Year == min(Year),Weeks , diff(Weeks) ) ) )
a = 1
a ==2 | 2 ==2
ddply(songs.agre, .(Producer, Title), summarise, ifelse(length(Year)==1 | Year == min(Year), Weeks, diff(Weeks)  ) )
songs.agre = aggregate(Weeks ~ Weeks ~ Producer + Title + Year, data = songs, FUN = max)
songs.agre = aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = max)
wanted = ddply(songs.agre, .(Producer, Title), summarise, ifelse(length(Year)==1 | Year == min(Year), Weeks, diff(Weeks)  ) )
wanted
wanted = ddply(songs.agre, .(Producer, Title), summarise, n_weeks = ifelse(length(Year)==1 | Year == min(Year), Weeks, diff(Weeks)  ) )
wanted
View(songs)
songs.agre = aggregate(Weeks ~ Producer + Title + Year, data = songs, FUN = max)
wanted = ddply(songs.agre, .(Producer, Title), summarise, n_weeks = ifelse(length(Year)==1 | Year == min(Year), Weeks, diff(Weeks)  ) )
wanted
# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
fair <- read.csv("WorkOpportunity_clean.csv")
# standardize `Age` and 'CognitiveControlTotalCorrect`
fair$Age_c <- scale(fair$Age, center = TRUE)
fair$CognitiveControlTotalCorrect_c <- scale(fair$CognitiveControlTotalCorrect, center = TRUE)
#  We use a temporary variable a for EDA instead of the originial dataset "fair".
a <- as.data.table(fair)
# label the SubjectID just to make it easier for later charts or plots
sub.dt <- data.table(SubjectID = unique(fair$SubjectID), sub=1:67)
sub.dt$sub <- as.factor(sub.dt$sub)
a <- merge(a, sub.dt)  # label subjectID to the original dataset
music <- read.csv("/Users/irisapo/Google Drive/SummerConsulting/Music_Education (1)/data/Home-based Data.xlsx")
music <- read.table("/Users/irisapo/Google Drive/SummerConsulting/Music_Education (1)/data/Home-based Data.xlsx", header = T)
library(readxl)
music <- read_xlsx("/Users/irisapo/Google Drive/SummerConsulting/Music_Education (1)/data/Home-based Data.xlsx")
colnames(music)
length(colnames(music))
vars.used <- c("Percent_NoEnglish", "Percent_AnotherRace", "Percent_BlackOrAfrican-American", "Percent_White", "Percent_HispanicOrLatino",
"HB_WORK_ECE_SINGING",
"HB_CHAR_RACE",
"HB_COMM_POVERTY_DENSITY", "HB_COMM_URBAN_DENSITY",
"HB_METH_VPSU", "HB_METH_VSTRATUM", "HB_METH_WEIGHT",
"HB_COMM_W_R_BLACK_RC", "HB_COMM_W_R_HISPANIC_RC")
music.sub <- music[, vars.used]
View(music.sub)
topic_gene.py <- data.frame(Topic0 = c(18, 80, 19, 87, 68, 4, 26, 7, 30, 90, 51, 32, 74, 94, 47, 60, 42, 76, 12, 86, 82, 58, 29, 3, 95, 28, 35, 27, 25, 79, 99, 23, 61),
Topic1 = c(80, 26, 18, 51, 32, 87, 35, 25, 4, 61, 76, 90, 19, 42, 74, 68, 7, 86, 82, 47, 85, 94, 30, 50, 92, 3, 60, 36, 29, 48, 11, 66, 28),
Topic2 = c(18, 80, 68, 87, 74, 51, 19, 30, 4, 94, 26, 47, 60, 32, 90, 7, 76, 82, 23, 42, 9, 58, 29, 12, 66, 99, 86, 25, 3, 72, 95, 88, 28)]
topic_gene.py <- data.frame(Topic0 = c(18, 80, 19, 87, 68, 4, 26, 7, 30, 90, 51, 32, 74, 94, 47, 60, 42, 76, 12, 86, 82, 58, 29, 3, 95, 28, 35, 27, 25, 79, 99, 23, 61),
Topic1 = c(80, 26, 18, 51, 32, 87, 35, 25, 4, 61, 76, 90, 19, 42, 74, 68, 7, 86, 82, 47, 85, 94, 30, 50, 92, 3, 60, 36, 29, 48, 11, 66, 28),
Topic2 = c(18, 80, 68, 87, 74, 51, 19, 30, 4, 94, 26, 47, 60, 32, 90, 7, 76, 82, 23, 42, 9, 58, 29, 12, 66, 99, 86, 25, 3, 72, 95, 88, 28)
)
topic_gene.py
knitr::opts_chunk$set(echo = TRUE,fig.width=6,fig.height=6 ,
out.width="0.7\\linewidth", fig.align = "center")
library(RColorBrewer)
library(ggplot2)
library(celda)
library(gtools)
library(pheatmap)
library(reshape2)
library(vcd)
library(corrplot)
library(gtable)
library(scales)
data("sample.cells")
library(pheatmap)
pheatmap(scale(sample.cells,center = F),cluster_rows = FALSE, cluster_cols = FALSE)
toy_celda_cg = celda(sample.cells, model="celda_CG",sample.label = rep(1,12),K = 4, L = 4)
toy_celda_cg$res.list[[1]]$z
celda_heatmap(celda.mod = toy_celda_cg$res.list[[1]], counts = sample.cells, z.trim = NULL)
sim_counts = simulateCells.celda_C( G = 100,K = 3)
pheatmap(scale(sim_counts$counts,center = F),cluster_rows = FALSE, cluster_cols = FALSE)
dim(sim_counts$counts)
celda_cluster_assignments = celda( sim_counts$counts, model="celda_CG",
sample.label = sim_counts$sample,
K = 3,L = 3,max.iter = 25 )
#str(celda_cluster_assignments)
celda_cluster_assignments$res.list[[1]]$y
melt(topic_gene.py)
length(unique(melt(topic_gene.py)))
length(unique(melt(topic_gene.py)$value))
length(unique(melt(topic_gene.py)[,value]))
topic_gene.celda = data.frame(topic = celda_cluster_assignments$res.list[[1]], gene = seq(1,100) )
topic_gene.celda = data.frame(topic = celda_cluster_assignments$res.list[[1]]$y, gene = seq(1,100) )
topic_gene.celda
?sapply
sapply(topic_gene.celda$topic, function(x)  ifelse(x==1, "Topic0", ifelse(x==2, "Topic1", "topic2")))
topic_gene.celda$Topic = sapply(topic_gene.celda$topic, function(x)  ifelse(x==1, "Topic0", ifelse(x==2, "Topic1", "topic2")))
topic_gene.celda
library(ggplot2)
ggplot(topic_gene.celda) + aes(gene, Topic, col= Topic) + geom_point()
topic_gene.celda$plot = 1
ggplot(topic_gene.celda) + aes(gene, plot, col= Topic) + geom_point()
melt(topic_gene.py)
??melt
library(reshape2)
melt(topic_gene.py)
topic_gene.py.melt = melt(topic_gene.py)
topic_gene.py.melt
topic_gene.py.melt$plot = 2
View(topic_gene.py)
View(topic_gene.py)
topic_gene.py.melt = melt(topic_gene.py, measure.vars = c("Topic0","Topic1", "Topic2")
)
topic_gene.py.melt
topic_gene.py.melt$plot = 2
topic_gene.py.melt
colnames(topic_gene.py.melt)[2] = "gene"
colnames(topic_gene.py.melt)
colnames(topic_gene.py.melt)[1] = "Topic"
ggplot(topic_gene.py.melt) + aes(gene, plot, col = Topic) + geom_point(alpha= 0.5)
ggplot(topic_gene.py.melt) + aes(gene, plot, col = Topic) + geom_jitter()
topic_gene.both = rbind(topic_gene.celda, topic_gene.py.melt)
colnames(topic_gene.py)
colnames(topic_gene.py.melt)
colnames(topic_gene.celda)
topic_gene.both = rbind(topic_gene.celda[,c(3,2,4)], topic_gene.py.melt)
ggplot(topic_gene.both) + aes(gene, plot, col = Topic) + geom_jitter(height = 0.1)
topic_gene.py
topic_gene.both[which(topic_gene.both$Topic=="topic2")]
topic_gene.both[which(topic_gene.both$Topic=="topic2"),]
topic_gene.celda$Topic = sapply(topic_gene.celda$topic, function(x)  ifelse(x==1, "Topic0", ifelse(x==2, "Topic1", "Topic2")))
topic_gene.celda
topic_gene.both = rbind(topic_gene.celda[,c(3,2,4)], topic_gene.py.melt)
topic_gene.both
ggplot(topic_gene.both) + aes(gene, plot, col = Topic) + geom_jitter(height = 0.05)
ggplot(topic_gene.both) + aes(gene, plot, col = Topic) + geom_jitter(height = 0.08)
ggplot(topic_gene.both) + aes(gene, plot, col = Topic) + geom_jitter(height = 0.06)
ggsave("/Users/irisapo/Desktop/celda_pymc.png")
sim_counts = simulateCells.celda_G( G = 100,K = 3)
library(celda)
sim_counts = simulateCells.celda_G( G = 100,K = 3)
sim_counts = simulateCells.celda_G( C = 100,L  = 3)
dim(sim_counts$counts)
sim_counts = simulateCells.celda_G( C = 500,L  = 3)
dim(sim_counts$counts)
sim_counts = simulateCells.celda_G( C = 500,L  = 3)
dim(sim_counts$counts)
sim_counts$counts
?simulateCells.celda_G
sim_counts = simulateCells.celda_G( C = 500)
dim(sim_counts$counts)
?simulateCells.celda_CG
sim_counts = simulateCells.celda_CG( )
sim(sim_counts$counts)
dim(sim_counts$counts)
npySave("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/sim_counts1.npy", t(sim_counts$counts))
library(RcppCNPy)
npySave("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/sim_counts1.npy", t(sim_counts$counts))
celda_cluster_assignments = celda( sim_counts$counts, model="celda_CG",
sample.label = sim_counts$sample,
K = 3,L = 10,max.iter = 50 )
topic_gene.py <- data.frame(Topic0 = c(663, 49, 326, 81, 38, 794, 980, 475, 632, 380, 626, 850, 655, 519, 115, 308, 79, 478, 372, 106, 839, 399, 532, 162, 477, 435, 389, 907, 270, 732, 750, 916, 934, 366, 480, 408, 238, 746, 458, 87, 330, 944, 967, 738, 623, 381, 538, 523, 501, 688, 671, 146, 959, 370, 332, 758, 831, 203, 742, 603, 668, 128, 196, 848, 512, 52, 98, 974, 802, 442, 871, 849, 420, 412, 640, 705, 524, 612, 869, 54, 805, 14, 159, 266, 973, 428, 752, 74, 166, 339, 496, 749, 25, 414, 599, 357, 391, 103, 879, 46, 289, 460, 698, 886, 140, 336, 268, 71, 498, 867, 232, 116, 453, 905, 489, 628, 785, 574, 937, 20, 88, 123, 132, 4, 757, 176, 855, 427, 254, 609, 624, 170, 72, 48, 530, 669, 724, 77, 121, 445, 990, 933, 793, 299, 275, 745, 704, 187, 436, 834, 521, 773, 955, 483, 377, 6, 711, 796, 687, 953, 780, 592, 825, 504, 369, 352, 827, 807, 772, 584, 941, 263, 384, 459, 8, 883, 505, 986, 368, 531, 775, 12, 868, 307, 465, 180, 21, 335, 66, 811, 130, 186, 105, 897, 570, 322, 870, 721, 893, 653, 124, 418, 611, 829, 676, 840, 895, 113, 69, 622, 110, 568, 481, 818, 906, 177, 40, 837, 729, 454, 947, 681, 571, 212, 229, 816, 860, 660, 188, 220, 684, 296, 151, 34, 199, 740, 799, 276, 341, 528, 781, 594, 150, 356, 306, 637, 397, 249, 250, 508, 472, 419, 874, 510, 712, 126, 649, 822, 804, 76, 164, 682, 719, 43, 503, 928, 737, 125, 789, 583, 142, 309, 190, 114, 654, 685, 795, 355, 237, 992, 257, 940, 434, 51, 260, 657, 847, 143, 935, 922, 918, 264, 311, 546, 118, 60, 925, 631, 314, 718, 978, 493, 53, 68, 845, 557, 629, 281, 361, 761, 33, 30, 348, 539, 976, 95, 231, 942, 385, 566, 858, 107, 634, 18, 455, 764, 699, 195, 75, 949, 783, 178, 587),
Topic1 = c(399, 380, 38, 146, 238, 308, 519, 688, 132, 453, 106, 848, 435, 330, 203, 263, 370, 408, 381, 366, 166, 532, 266, 116, 103, 142, 270, 4, 74, 357, 623, 501, 221, 412, 671, 187, 140, 738, 458, 46, 523, 289, 196, 14, 123, 20, 265, 299, 128, 383, 512, 213, 655, 286, 285, 401, 159, 49, 426, 176, 705, 170, 367, 336, 524, 6, 758, 628, 121, 384, 746, 742, 653, 34, 364, 54, 254, 284, 442, 21, 156, 445, 436, 52, 91, 124, 149, 391, 39, 805, 110, 663, 31, 71, 341, 369, 335, 92, 462, 197, 362, 58, 66, 708, 25, 493, 373, 220, 496, 109, 51, 860, 420, 268, 641, 871, 465, 687, 668, 406, 212, 276, 68, 609, 226, 60, 157, 368, 483, 2, 275, 709, 229, 190, 504, 199, 233, 459, 204, 704, 698, 443, 498, 449, 75, 640, 352, 93, 377, 151, 19, 326, 216, 302, 43, 81, 572, 448, 76, 486, 785, 612, 215, 574, 13, 1, 907, 261, 125, 505, 247, 773, 673, 271, 567, 112, 592, 624, 603, 363, 689, 188, 18, 752, 115, 178, 48, 296, 460, 44, 150, 729, 570, 540, 47, 482, 94, 162, 497, 441, 916, 356, 288, 798, 419, 397, 79, 45, 528, 164, 56, 192, 329, 316, 385, 394, 118, 676, 451, 477, 307, 331, 684, 145, 563, 669, 160, 240, 250, 886, 225, 530, 83, 633, 107, 454, 249, 517, 334, 63, 582, 260, 372, 322, 608, 768, 287, 23, 772, 551, 147, 231, 117, 476, 338, 274, 173, 793, 86, 662, 235, 88, 230, 343, 775, 169, 475, 955, 264, 301, 64, 333, 349, 468, 272, 403, 234, 389, 587, 622, 87, 535, 780, 438, 870, 201, 632, 99, 127, 61, 711, 405, 630, 305, 360, 217, 248, 654, 15, 59, 40, 77, 650, 410, 180, 480, 434, 487, 411, 5, 510, 682, 359, 601, 168, 174, 98, 691, 481, 386, 820, 280, 562, 8, 114, 185, 478, 739, 868, 232, 856, 649, 581),
Topic2 = c(399, 38, 238, 380, 519, 688, 146, 308, 848, 106, 532, 655, 907, 366, 435, 916, 330, 458, 738, 408, 453, 132, 623, 671, 381, 523, 955, 758, 967, 742, 370, 663, 501, 270, 934, 512, 263, 203, 746, 49, 705, 412, 871, 805, 166, 266, 886, 357, 74, 653, 860, 668, 140, 524, 289, 752, 116, 103, 336, 785, 628, 603, 196, 20, 123, 4, 128, 420, 54, 46, 254, 445, 326, 52, 869, 905, 698, 612, 640, 442, 142, 609, 973, 268, 71, 159, 704, 187, 990, 773, 574, 687, 121, 772, 170, 436, 14, 299, 496, 953, 794, 827, 669, 391, 426, 25, 493, 176, 641, 933, 81, 624, 775, 879, 459, 980, 868, 504, 364, 221, 914, 477, 867, 793, 384, 505, 592, 498, 460, 721, 483, 6, 465, 780, 475, 265, 673, 798, 367, 870, 66, 21, 632, 377, 895, 986, 383, 124, 708, 368, 335, 729, 443, 369, 486, 689, 352, 229, 676, 530, 854, 285, 110, 856, 570, 34, 816, 478, 711, 199, 341, 567, 401, 684, 850, 284, 626, 79, 275, 660, 941, 276, 149, 213, 709, 740, 540, 528, 481, 510, 837, 197, 286, 212, 419, 563, 649, 572, 372, 971, 356, 682, 250, 296, 150, 928, 125, 115, 948, 362, 789, 662, 76, 768, 800, 622, 820, 891, 482, 373, 397, 39, 43, 220, 51, 322, 164, 307, 91, 940, 162, 608, 448, 92, 60, 449, 839, 260, 190, 691, 441, 302, 389, 156, 654, 992, 858, 922, 406, 718, 802, 68, 454, 19, 118, 683, 188, 875, 750, 882, 434, 261, 949, 627, 462, 814, 204, 732, 216, 674, 587, 94, 385, 249, 107, 151, 476, 58, 215, 451, 989, 783, 739, 428, 546, 862, 795, 109, 943, 633, 517, 169, 961, 764, 966, 480, 87, 952, 535, 582, 438, 2, 75, 924, 599, 782, 821, 414, 1, 747, 18, 581, 403, 864, 828, 984, 288, 264, 756, 271, 630, 699, 894, 88, 988, 631, 754, 551, 363, 944, 918, 650, 538) )
head(topic_gene.py)
topic_gene.py.melt = melt(topic_gene.py, measure.vars = c("Topic0","Topic1", "Topic2"))
head(topic_gene.py.melt)
topic_gene.celda = data.frame(topic = celda_cluster_assignments$res.list[[1]]$y, gene = seq(1,length(celda_cluster_assignments$res.list[[1]]$y)) )
head(topic_gene.celda)
nrow(topic_gene.celda)
unique(celda_cluster_assignments$res.list[[1]]$y)
str(sim_counts)
sim_counts$y
topic_gene.celda$Topic = sapply(topic_gene.celda$topic,
function(x)  if(x==1) return("Topic1")
if(x==2) return("Topic2")
if(x==3) return("Topic3")
if(x==4) return("Topic4")
if(x==5) return("Topic5")
if(x==6) return("Topic6")
if(x==7) return("Topic7")
if(x==8) return("Topic8")
if(x==9) return("Topic9")
if(x==10) return("Topic10"))
function(x) if(x==1) return("@") if(x==2) return("2")
function(x) if(x==1) return("@") else if(x==2) return("2")
a = function(x) if(x==1) return("@") else if(x==2) return("2")
a(2)
a(1)
topic_gene.celda$Topic = sapply(topic_gene.celda$topic,
function(x)  if(x==1) return("Topic1")
else if(x==2) return("Topic2")
else if(x==3) return("Topic3")
else if(x==4) return("Topic4")
else if(x==5) return("Topic5")
else if(x==6) return("Topic6")
else if(x==7) return("Topic7")
else if(x==8) return("Topic8")
else if(x==9) return("Topic9")
else if (x==10) return("Topic10"))
topic_gene.celda
topic_gene.py <- data.frame(Topic0 = c(49, 663, 326, 38, 106, 81, 399, 14, 380, 18, 4, 477, 115, 475, 107, 116, 389, 146, 308, 79, 263, 87, 23, 34, 238, 54, 25, 155, 74, 124, 128, 372, 105, 46, 332, 519, 51, 330, 66, 39, 27, 203, 176, 110, 98, 44, 162, 53, 52, 435, 140, 69, 204, 166, 196, 159, 92, 5, 123, 201, 0, 478, 29, 16, 134, 366, 130, 72, 30, 233, 40, 142, 71, 266, 63, 100, 121, 453, 476, 289, 286, 345, 1, 261, 458, 413, 147, 145, 36, 163, 180, 84, 20, 199, 343, 219, 61, 198, 270, 157),
Topic1 = c(49, 38, 81, 79, 115, 29, 146, 63, 162, 203, 14, 12, 132, 326, 475, 125, 124, 114, 53, 380, 98, 308, 3, 66, 127, 34, 123, 8, 97, 381, 159, 1, 54, 221, 296, 87, 238, 110, 149, 366, 364, 103, 367, 92, 20, 139, 51, 48, 142, 106, 33, 85, 41, 43, 19, 140, 89, 312, 77, 225, 99, 532, 105, 389, 428, 107, 113, 71, 95, 145, 663, 58, 25, 610, 94, 179, 188, 23, 91, 234, 217, 196, 237, 181, 2, 232, 187, 78, 17, 153, 61, 46, 44, 150, 261, 299, 141, 191, 108, 212),
)
topic_gene.py <- npyLoad("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/topic_gene.npy")
head(topic_gene.py)
dim(topic_gene.py)
topic_gene.py <- npyLoad("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/topic_gene.npy")
dim(topic_gene.py)
type(topic_gene.py)
class(topic_gene.py)
topic_gene.py <- data.frame(topic_gene.py)
head(topic_gene.py)
colnames(topic_gene.py) <- c("Topic0","Topic1","Topic2","Topic3","Topic4","Topic5","Topic6","Topic7","Topic8","Topic9","Topic10")
colnames(topic_gene.py) <- c("Topic0","Topic1","Topic2","Topic3","Topic4","Topic5","Topic6","Topic7","Topic8","Topic9")
head(topic_gene.py)
topic_gene.py.melt <- melt(topic_gene.py)
head(topic_gene.py.melt)
colnames(topic_gene.celda)
topic_gene.py <- npyLoad("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/topic_gene.npy")
head(topic_gene.py)
round(topic_gene.py)
topic_gene.py <- read.csv("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/topic_gene.csv", header = FALSE)
topic_gene.py
paste0("Topic", seq(1,100))
paste0("Topic", seq(1,10))
colnames(topic_gene.py) <- paste0("Topic", seq(0,9))
head(topic_gene.py)
topic_gene.py.melt <- melt(topic_gene.py)
head(topic_gene.py.melt)
table(topic_gene.py.melt$value)
colnames(topic_gene.py.melt) <- c("Topic", "gene")
head(topic_gene.celda)
topic_gene.celda$plot = 1
table(topic_gene.py.melt$Topic)
topic_gene.py.melt
topic_gene.py.melt$plot = 2
topic_gene.both <- rbind(topic_gene.celda[,c(3,2,4)],topic_gene.py.melt )
head(topic_gene.both)
ggplot(topic_gene.both) + aes(gene, plot, col = Topic) + geom_jitter(width = 0.5)
beta = read.csv("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/beta.csv", header = FALSE)
head(beta)
dim(beta)
apply(beta,2,which.max)
table(apply(beta,2,which.max),celda_cluster_assignments$res.list[[1]]
)
table(apply(beta,2,which.max),celda_cluster_assignments$res.list[[1]]$y)
table(celda_cluster_assignments$res.list[[1]]$y)
table(apply(beta,2,which.max))
beta = read.csv("/Users/irisapo/Documents/Boston/Proj/celda_ysy/Py_validation/beta.csv", header = FALSE)
table(apply(beta,2,which.max))
table(apply(beta,2,which.max),celda_cluster_assignments$res.list[[1]]$y)
# library loading
# install.packages("pacman")
pacman::p_load("rstanarm","ggplot2","data.table","loo")
fair1 <- fair
fair1$PercentAbsError.Opportunity.AVG <- fair1$PercentAbsError.Opportunity.AVG + 1
fair1$PercentAbsError.Work.AVG <-  fair1$PercentAbsError.Work.AVG + 1
lm.2.W1 <- stan_glmer(PercentAbsError.Work.AVG ~EqualWork *Age_c +  CognitiveControlTotalCorrect_c + EqualWork * Large. * EqualOpportunity
+(1|SubjectID), prior = normal(), prior_intercept = normal(),
data = fair1,
family = gaussian(link = "log"))
lm.2.W1 <- stan_glmer(PercentAbsError.Work.AVG ~EqualWork *Age_c +  CognitiveControlTotalCorrect_c + EqualWork * Large. * EqualOpportunity
+(1|SubjectID), prior = normal(), prior_intercept = normal(),
data = fair1,
family = gaussian(link = "log"))
?lgamma
phi <- gtools::rdirichlet(3, rep(1, 4))
phi
lgamma(5*1)
?lgamma
lgamma(3)
gamma(3)
log(2)
z  <- c(2,2,3,3,3,1,1,1,1,1,4,5)
length(z)
s <- c(rep(1,5), rep(2,7))
s
length(s)
m.CP.by.S = table(z, s)
m.CP.by.S
lgamma(m.CP.by.S + 0)
lgamma(m.CP.by.S + 1)
gamma(m.CP.by.S + 1)
knitr::opts_chunk$set(fig.width = 8, fig.height = 8, message = FALSE, warning = FALSE,fig.align="center",out.width="0.8\\linewidth", cache = TRUE, tidy = TRUE)
pacman::p_load(readxl,ggplot2, reshape2, MASS, nnet, arm, RColorBrewer, rstanarm, loo)
music.cen <- read_xlsx("data/Center-based and Workforce Merged Data.xlsx")
vars.used <- c("CB_ADDR_HS",   # binary (head start program exist =1 )
"CB_C6_NUMHISPANIC_PCT", "CB_C7_NUMRACE_A_PCT", "CB_C7_NUMRACE_B_PCT", "CB_C7_NUMRACE_C_PCT", # countinuous (child race percentage)
"CB_METH_WEIGHT", "CB_METH_VSTRATUM" , "CB_METH_VPSU", # weights
"CB_COMM_POVERTY_DENSITY", "CB_COMM_URBAN_DENSITY",  # categorical
"CB_C12_TYPEFED_HS_PCT",  # continuous  (funded children percentage by Head Start )
"WF_CHAR_RACE",  # provider race
"CB_COMM_W_R_BLACK_RC", "CB_COMM_W_R_HISPANIC_RC",   # ordered category
"WF_G3_ECE_ACTIVITY_R_D",  #DV
"CB_FULL_PART_TIME",
"CB_HRSOPEN_R_MON","CB_HRSOPEN_R_TUES", "CB_HRSOPEN_R_WED", "CB_HRSOPEN_R_THURS", "CB_HRSOPEN_R_FRI",
"WF_C3B3_TIMEPLAN"
)
music.sub <- music.cen[, vars.used]
music.sub.days <- music.sub[music.sub$WF_G3_ECE_ACTIVITY_R_D >=0,]
sapply(c( "CB_C6_NUMHISPANIC_PCT", "CB_C7_NUMRACE_A_PCT", "CB_C7_NUMRACE_B_PCT", "CB_C7_NUMRACE_C_PCT") , function(i) music.sub.days[which(music.sub.days[,i] == -1),i] <<- NA)
music.sub.days$CB_C12_TYPEFED_HS_PCT[which(music.sub.days$CB_C12_TYPEFED_HS_PCT < 0)] <- NA
# mean of practice days in each race
music.sub.days.pos<- music.sub.days[music.sub.days$WF_G3_ECE_ACTIVITY_R_D>0,]
by(music.sub.days.pos$WF_G3_ECE_ACTIVITY_R_D,music.sub.days.pos$WF_CHAR_RACE,mean,na.rm=T)
ggplot(music.sub.days)+geom_density()+aes(x=WF_G3_ECE_ACTIVITY_R_D,color=factor(WF_CHAR_RACE))
ml.4  <- polr( factor(WF_G3_ECE_ACTIVITY_R_D) ~
CB_ADDR_HS * CB_C12_TYPEFED_HS_PCT +
(CB_C7_NUMRACE_A_PCT +
CB_C7_NUMRACE_C_PCT + CB_C7_NUMRACE_B_PCT + CB_C6_NUMHISPANIC_PCT) +
(factor(CB_COMM_POVERTY_DENSITY) + factor(CB_COMM_URBAN_DENSITY) ) +
factor(WF_CHAR_RACE) +
CB_FULL_PART_TIME+
CB_HRSOPEN_R_MON +CB_HRSOPEN_R_TUES+CB_HRSOPEN_R_WED+CB_HRSOPEN_R_THURS+CB_HRSOPEN_R_FRI+
WF_C3B3_TIMEPLAN,
data = music.sub.days)
p.ml4 <- predict(ml.4)
table(p.ml4)
ml.4  <- polr( factor(WF_G3_ECE_ACTIVITY_R_D) ~
CB_ADDR_HS * CB_C12_TYPEFED_HS_PCT +
(CB_C7_NUMRACE_A_PCT +
CB_C7_NUMRACE_C_PCT + CB_C7_NUMRACE_B_PCT + CB_C6_NUMHISPANIC_PCT) +
(factor(CB_COMM_POVERTY_DENSITY) + factor(CB_COMM_URBAN_DENSITY) ) +
factor(WF_CHAR_RACE) +
CB_FULL_PART_TIME+
CB_HRSOPEN_R_MON +CB_HRSOPEN_R_TUES+CB_HRSOPEN_R_WED+CB_HRSOPEN_R_THURS+CB_HRSOPEN_R_FRI+
WF_C3B3_TIMEPLAN,
data = music.sub.days, method = "cloglog")
p.ml4 <- predict(ml.4)
table(p.ml4)
ml.4  <- polr( factor(WF_G3_ECE_ACTIVITY_R_D) ~
CB_ADDR_HS * CB_C12_TYPEFED_HS_PCT +
(CB_C7_NUMRACE_A_PCT +
CB_C7_NUMRACE_C_PCT + CB_C7_NUMRACE_B_PCT + CB_C6_NUMHISPANIC_PCT) +
(factor(CB_COMM_POVERTY_DENSITY) + factor(CB_COMM_URBAN_DENSITY) ) *
factor(WF_CHAR_RACE) +
CB_FULL_PART_TIME+
CB_HRSOPEN_R_MON +CB_HRSOPEN_R_TUES+CB_HRSOPEN_R_WED+CB_HRSOPEN_R_THURS+CB_HRSOPEN_R_FRI+
WF_C3B3_TIMEPLAN,
data = music.sub.days, method = "cloglog")
p.ml4 <- predict(ml.4)
table(p.ml4)
library(celda)
library(RcppCNPy)
sim_counts = simulateCells.celda_C(S=5, G= 50, K=3)
sim_counts$counts
npySave("Desktop/sim_counts.npy", t(sim_counts$counts))
set.seed(1)
sim_counts = simulateCells.celda_C(S=5, G= 50, K=3, )
npySave("Desktop/celda_simulated/sim_counts.npy", t(sim_counts$counts))
sim_counts$sample.label
sim_counts$z
npySave("celda_cell_label.npy", t(sim_counts$z))
length(sim_counts$z)
npySave("celda_cell_label.npy", (sim_counts$z))
getwd()
library(celda)
sim_counts = simulateCells.celda_C( G = 100,K = 5)
npySave("celda_cell_label.npy", sim_counts$z)
npySave("sim_counts.npy", t(sim_counts$counts))
getwd()
setwd("/Users/irisapo/Desktop/celda_simulated/")
npySave("celda_cell_label.npy", sim_counts$z)
